[build-system]
requires = ["flit_core >=3.3,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "boilercv"
requires-python = ">=3.11"
dependencies = [
    "dvc[gs]>=2.45.1",
    "matplotlib>=3.7.1",
    "opencv-contrib-python>=4.7.0.72",
    "pandas>=1.5.3",
    "pandera>=0.13.4",
    "pyarrow>=11.0.0",
    "pydantic>=1.10.5",
    "pyjanitor>=0.24.0",
    "ruamel.yaml>=0.17.21",
    "seaborn>=0.12.2",
    "pyyaml>=6.0",
    "loguru>=0.6.0",
]
readme = "README.md"
dynamic = ["version", "description"]
[[project.authors]]
name = "Blake Naccarato"
email = "blake.naccarato+boilercv@gmail.com"

[project.urls]
Home = "https://github.com/blakeNaccarato/boilercv"

[project.optional-dependencies]

[tool.ruff]
fix = true
select = ["ALL"]
src = ["src", "tests"]
target-version = "py311"
extend-exclude = ["template", "typings", ".github", ".tools", ".venv"]
ignore = [
    "ANN",    # Don't require type annotations
    "ARG005", # Allow unused lambda argument. For consistency across df pipelines.
    "C408",   # Allow dict calls
    "COM",    # Allow magic commas and magic missing commas
    "D10",    # Missing docstrings
    "D20",    # Don't reformat docstrings in these ways
    "D213",   # Multi-line docstring summary should start at the second line
    "DTZ",    # Timezones are important, but only contextually necessary.
    "E501",   # Black enforces this
    "EM",     # Don't check for exception message issues
    "ERA",    # False positives. Don't get rid of commented out code.
    "FBT",    # Allow boolean "traps"
    "INP001", # False positives. Checks for packages missing `__init__.py`
    "ISC",    # False positives. Implicit string concatenation is fine.
    "PD901",  # Allow `df` variable name. We are all consenting adults here.
    "PGH003", # Until black stops wrapping special ignores, let's allow bare
    "RET",    # Return checks are flaky, Sourcery does fine analysing these paths
    "TCH",    # Type checking linter doesn't play nicely with pydantic
    "TRY003", # Allow long exception messages
]

[tool.ruff.per-file-ignores]
"tests/**" = [
    "ARG001", # Allow unused arguments in tests
    "S101",   # Allow assert in tests
]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["typer.Argument", "typer.Option"]

[tool.ruff.pep8-naming]
classmethod-decorators = ["pydantic.validator"]
